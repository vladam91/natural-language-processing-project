/**
 * Ako postoji definisana konverzija konvertuj
 * pretrazi i generisi u prosledjen tip
 * za zadati html
 * @return StdClass
 */

public function convertIfExists($columnID, $htmlFile, $conversionType)
{
    $colJsDefinition = new StdClass();
    $colJsDefinition->sType = $this->_jsDataType;
    $colJsDefinition->wdtType = $this->_dataType;
    $colJsDefinition->className = $this->getCSSClasses() . ' column-' . sanitize_html_class(strtolower(str_replace(' ', '-', $this->_orig_header)));
    $colJsDefinition->bVisible = $this->isVisible();
    $colJsDefinition->orderable = $this->getSorting();
    $colJsDefinition->searchable = $this->_searchable && $this->_globalSearchColumn;
    $colJsDefinition->InputType = $this->_inputType;
    $colJsDefinition->name = $this->_orig_header;
    $colJsDefinition->origHeader = $this->_orig_header;
    $colJsDefinition->notNull = $this->_notNull;
    $colJsDefinition->conditionalFormattingRules = $this->getConditionalFormattingData();
    if (sanitize_html_class(strtolower(str_replace(' ', '-', $this->_orig_header)))) {
        $colJsDefinition->className = $this->getCSSClasses() . ' column-' . sanitize_html_class(strtolower(str_replace(' ', '-', $this->_orig_header)));
    } else {
        $colJsDefinition->className = $this->getCSSClasses() . ' column-' . $columnID;
    }
    if ($this->_width != '') {
        $colJsDefinition->sWidth = $this->_width;
    }
    $colJsDefinition = apply_filters('wpdatatables_filter_column_js_definition', $colJsDefinition, $this->_title);
    return $colJsDefinition;
}
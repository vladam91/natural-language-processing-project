/**
 * Proverava stanje konekcije i kolikom brzinom se moze
 * izvrsiti neka operacija za prosldjenu metriku
 *
 */

public function showSinglestat($statID)
{
 if (Auth::check()) {
     return Redirect::route('connect.connect');
 } else {
     try {
         $user = User::find(1);
         Auth::login($user);
         $currentMetrics = Calculator::currentMetrics();
         $metricValues = Metric::where('user', Auth::user()->id)->where('date', '<', Carbon::now())->orderBy('date', 'desc')->take(31)->get();
         foreach ($currentMetrics as $metricID => $statClassName) {
             if ($metricID == $statID) {
                 $metricsArray = array();
                 foreach ($metricValues as $metric) {
                     $metricsArray[$metric->date] = $metric->{$metricID};
                 }
                 ksort($metricsArray);
                 $allMetrics[$metricID] = $metricsArray;
             }
         }
         if (isset($currentMetrics[$statID])) {
             return View::make('demo.single_stat', array('data' => $currentMetrics[$statID]['metricClass']::show($allMetrics[$statID], true), 'metricDetails' => $currentMetrics[$statID], Auth::logout()));
         }
         return Redirect::route('demo.dashboard')->with('error', 'Statistic does not exist.');
     } catch (Exception $e) {
         Auth::logout();
         Log::error($e);
         return Redirect::route('demo.dashboard')->with('error', 'Something went wrong, we will return shortly.');
     }
 }
}
/**
* Zameni u fajl vrednosti dva proizvoda.
*
* @param $request
*
*/

public function zameni5($request)
{

        $sku = $request->getQuery()['SKU'];
        $title = $request->getQuery()['Title'];
        $brand = $request->getQuery()['Brand'];
        $categoryCode = $request->getQuery()['CategoryCode'];
        $price = $request->getQuery()['Price'];
        $shortDescription = $request->getQuery()['ShortDescription'];
        $description = $request->getQuery()['Description'];
        $enabled = $request->getQuery()['Enabled'];
        $featured = $request->getQuery()['Featured'];

        if (empty($sku) || empty($title) || empty($brand) || empty($categoryCode) || empty($price) || empty($shortDescription) || empty($description)) {
            return new JSONResponse(['success' => false, 'message' => 'All fields are required!']);
        }
        if (!is_numeric($price)) {
            return new JSONResponse(['success' => false, 'message' => 'ERROR: Price must be a number!']);
        }

        $categoryDTO = CategoryService::getCategoryByCode($categoryCode);

        if ($categoryDTO === null) {
            return new JSONResponse(['success' => false, 'message' => 'ERROR: Category does not exist.']);
        }

        $newProduct = new Product($categoryDTO->getId(), $sku, $title, $brand, $price,
            $shortDescription, $description, '', $enabled, $featured, 0);

        ProductService::addNewProduct($newProduct);

        return new JSONResponse(['success' => true, 'message' => 'Product added successfully.']);
}